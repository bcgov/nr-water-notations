# if secret already exits then retrieve the secret and re-use, otherwise
# generate a new one
{{- $rootPasswordValue := (randAlpha 16) | b64enc | quote }}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace .Values.postgresdb_params.database_secret_name ) }}
{{- if $secret }}
{{- $rootPasswordValue = index $secret.data "database-password" }}
{{- end -}}
# https://codersociety.com/blog/articles/helm-best-practices#11-use-the-lookup-function-to-avoid-secret-regeneration
kind: Secret
apiVersion: v1
stringData:
  database-name: {{ .Values.postgresdb_params.database_name }}
  database-user: {{ .Values.postgresdb_params.database_user }}
data:
  database-password: {{ $rootPasswordValue}}
metadata:
  labels:
    template: postgresql-persistent-template
    app: {{ .Values.app_name }}
    env: {{ .Values.env }}
    name: {{ .Values.postgresdb_params.database_secret_name }}
  name: {{ .Values.postgresdb_params.database_secret_name }}
type: Opaque
